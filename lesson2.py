''' Работа со строками '''

# 1. Форматирование строки: Дана строка с именем и фамилией человека, разделёнными пробелом.
# Написать программу, которая принимает эту строку и возвращает её в формате: фамилия, инициалы. Например,
# "Иван Сидоров" преобразуется в "Сидоров И."
print("1.1--------------------")
name = "Иван" "Сидоров"
print (name [4:], name[0:1] +'.')

# 2. Парсинг даты: Дана строка, содержащая дату в формате "ДД-ММ-ГГГГ".
# Написать программу, которая принимает эту строку и возвращает кортеж из трех чисел: (день, месяц, год).
print("1.2-------------------- Доделать")
input_d= ('06-02-2024')
split_d = input_d.split ( )
print (split_d)


# 3. Обратный порядок слов: Дана строка, содержащая несколько слов, разделенных пробелами.
# Написать программу, которая возвращает строку, в которой слова расположены в обратном порядке.
# Например, "hello world" преобразуется в "world hello".
print("1.3--------------------")
name = "hello" "world"
print (name [5:], name[0:-5])

# 4. Удаление подстроки: Дана строка и подстрока. Написать программу, которая удаляет все вхождения подстроки из строки.
print("1.4--------------------")
input_text = "Hello world", "Pyhton"
print(input_text)
input_text_join = " ".join(input_text)
print(input_text_join)



# 5. Формирование строки с использованием f-строки:
# Написать программу, которая принимает имя, возраст и город проживания,
# и возвращает строку в формате: "Меня зовут [Имя]. Мне [Возраст] лет. Я живу в городе [Город]." используя f-строку.
print("1.5--------------------")
name = "Артём"
age = 24
print (f"Меня зовут {name}. Мне {age} лет")

''' Ветвление '''

# 1. Чем отличается `is` от `==` ?

# 2. Классификатор возраста: Написать программу, которая принимает возраст пользователя и выводит категорию:
# "ребенок" (0-12), "подросток" (13-17), "взрослый" (18-64) или "пожилой человек" (65 и старше).
print("2.2--------------------")
age = int(input('Введите возраст:'))
if age <= 12:
    print(age, "ребенок")
elif 12 < age <= 17:
    print(age, "подросток")
elif 17 < age <= 64:
    print(age, "взрослый")
else:
    print(age, "пожилой человек")


# 3. Программа для оценки пароля: Написать программу, которая анализирует введенный пароль и выводит его оценку:
# слабый (менее 6 символов), средний (6-12 символов, содержит только буквы и цифры)
# или сильный (более 12 символов, содержит буквы, цифры и спецсимволы).

# 4. Определение високосного года: Написать программу, которая определяет, является ли год,
# введенный пользователем, високосным. Год считается високосным, если он делится на 4,
# но если он делится на 100, он не является високосным, за исключением случаев, когда он делится на 400.

print("2.4-------------------- Доделать")
god = int(input('Введите год:'))
if god %/ 4
    print(god, "високосный")
else: 
    print(god, "не високосный")


# 5. Калькулятор квадратного уравнения:
# Написать программу, которая решает квадратное уравнение вида ax^2 + bx + c = 0.
# Программа должна принимать значения a, b и c от пользователя и выводить корни уравнения.
# Не забудьте учесть, что дискриминант может быть отрицательным (в этом случае решений нет),
# равным нулю (одно решение) или положительным (два решения).
#  a = float(input("Введите а:"))
#  b = float(input("Введите b:"))
#  c = float(input("Введите с:"))
#  x = float
#  d = b**2-4*a*c 
#  if d > 0:
#      print ((-b + (d**0,5))/(2*a), "=")
#  if d == 0:
#      print ((b + (d**0,5) )/(2*a), "=")
#      math

print("2.3-2.5------------------- Доделать")
    
    
    
    
    ''' Цикл while '''
# 1. Подсчет суммы чисел:
# Напишите программу, которая считает сумму чисел от 1 до N, где N задается пользователем.
print ("3.1--------------------")
N = int (input ('Введите число: '))
total = 0
number = 1
while number <= N:
    total += number
    number += 1
print("Сумма чисел от 1 до N:", total)



""""
Задания третьего и второго блока чуть позже

"""




# 2. Поиск минимального числа:
# Напишите программу, которая запрашивает у пользователя числа до тех пор,
# пока не будет введен 0, и находит минимальное из введенных чисел.

# 3. Факториал числа:
# Напишите программу, которая вычисляет факториал заданного числа N.

# 4. Поиск чисел Фибоначчи:
# Напишите программу, которая выводит первые N чисел последовательности Фибоначчи.

# 5. Проверка на простое число:
# Напишите программу, которая проверяет, является ли введенное пользователем число простым.
""""""